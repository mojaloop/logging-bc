/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: log_entry.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google\\protobuf\\any";
import * as pb_1 from "google-protobuf";
export enum LogLevelPB {
    DEBUG = 0,
    INFO = 1,
    WARN = 2,
    ERROR = 3,
    FATAL = 4
}
export class LogEntryPB extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        level?: LogLevelPB;
        timestamp?: number;
        bcName?: string;
        appName?: string;
        appVersion?: string;
        component?: string;
        message?: string;
        meta?: dependency_1.google.protobuf.Any;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("level" in data && data.level != undefined) {
                this.level = data.level;
            }
            if ("timestamp" in data && data.timestamp != undefined) {
                this.timestamp = data.timestamp;
            }
            if ("bcName" in data && data.bcName != undefined) {
                this.bcName = data.bcName;
            }
            if ("appName" in data && data.appName != undefined) {
                this.appName = data.appName;
            }
            if ("appVersion" in data && data.appVersion != undefined) {
                this.appVersion = data.appVersion;
            }
            if ("component" in data && data.component != undefined) {
                this.component = data.component;
            }
            if ("message" in data && data.message != undefined) {
                this.message = data.message;
            }
            if ("meta" in data && data.meta != undefined) {
                this.meta = data.meta;
            }
        }
    }
    get level() {
        return pb_1.Message.getFieldWithDefault(this, 1, LogLevelPB.DEBUG) as LogLevelPB;
    }
    set level(value: LogLevelPB) {
        pb_1.Message.setField(this, 1, value);
    }
    get timestamp() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set timestamp(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get bcName() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set bcName(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get appName() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set appName(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get appVersion() {
        return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
    }
    set appVersion(value: string) {
        pb_1.Message.setField(this, 5, value);
    }
    get component() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set component(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    get message() {
        return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
    }
    set message(value: string) {
        pb_1.Message.setField(this, 7, value);
    }
    get meta() {
        return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 8) as dependency_1.google.protobuf.Any;
    }
    set meta(value: dependency_1.google.protobuf.Any) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_meta() {
        return pb_1.Message.getField(this, 8) != null;
    }
    static fromObject(data: {
        level?: LogLevelPB;
        timestamp?: number;
        bcName?: string;
        appName?: string;
        appVersion?: string;
        component?: string;
        message?: string;
        meta?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
    }): LogEntryPB {
        const message = new LogEntryPB({});
        if (data.level != null) {
            message.level = data.level;
        }
        if (data.timestamp != null) {
            message.timestamp = data.timestamp;
        }
        if (data.bcName != null) {
            message.bcName = data.bcName;
        }
        if (data.appName != null) {
            message.appName = data.appName;
        }
        if (data.appVersion != null) {
            message.appVersion = data.appVersion;
        }
        if (data.component != null) {
            message.component = data.component;
        }
        if (data.message != null) {
            message.message = data.message;
        }
        if (data.meta != null) {
            message.meta = dependency_1.google.protobuf.Any.fromObject(data.meta);
        }
        return message;
    }
    toObject() {
        const data: {
            level?: LogLevelPB;
            timestamp?: number;
            bcName?: string;
            appName?: string;
            appVersion?: string;
            component?: string;
            message?: string;
            meta?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
        } = {};
        if (this.level != null) {
            data.level = this.level;
        }
        if (this.timestamp != null) {
            data.timestamp = this.timestamp;
        }
        if (this.bcName != null) {
            data.bcName = this.bcName;
        }
        if (this.appName != null) {
            data.appName = this.appName;
        }
        if (this.appVersion != null) {
            data.appVersion = this.appVersion;
        }
        if (this.component != null) {
            data.component = this.component;
        }
        if (this.message != null) {
            data.message = this.message;
        }
        if (this.meta != null) {
            data.meta = this.meta.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.level != LogLevelPB.DEBUG)
            writer.writeEnum(1, this.level);
        if (this.timestamp != 0)
            writer.writeInt64(2, this.timestamp);
        if (this.bcName.length)
            writer.writeString(3, this.bcName);
        if (this.appName.length)
            writer.writeString(4, this.appName);
        if (this.appVersion.length)
            writer.writeString(5, this.appVersion);
        if (this.component.length)
            writer.writeString(6, this.component);
        if (this.message.length)
            writer.writeString(7, this.message);
        if (this.has_meta)
            writer.writeMessage(8, this.meta, () => this.meta.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LogEntryPB {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LogEntryPB();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.level = reader.readEnum();
                    break;
                case 2:
                    message.timestamp = reader.readInt64();
                    break;
                case 3:
                    message.bcName = reader.readString();
                    break;
                case 4:
                    message.appName = reader.readString();
                    break;
                case 5:
                    message.appVersion = reader.readString();
                    break;
                case 6:
                    message.component = reader.readString();
                    break;
                case 7:
                    message.message = reader.readString();
                    break;
                case 8:
                    reader.readMessage(message.meta, () => message.meta = dependency_1.google.protobuf.Any.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): LogEntryPB {
        return LogEntryPB.deserialize(bytes);
    }
}
